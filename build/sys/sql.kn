func [d1005.knd, _init] _init()
end func

+class Sql()
	*func [d1005.knd, _sqlDtor, _force] _dtor()
	end func

	+func [d1005.knd, _sqlFin] fin()
	end func

	+func [d1005.knd, _sqlExec] exec(cmd: []char): bool
	end func

	+func [d1005.knd, _sqlPrepare] prepare(cmd: []char): bool
	end func

	+func [d1005.knd, _sqlSetInt] setInt(col: int, value: int): bool
	end func

	+func [d1005.knd, _sqlSetFloat] setFloat(col: int, value: float): bool
	end func

	+func [d1005.knd, _sqlSetStr] setStr(col: int, value: []char): bool
	end func

	+func [d1005.knd, _sqlSetBlob] setBlob(col: int, value: []bit8): bool
	end func

	+func [d1005.knd, _sqlGetInt] getInt(col: int): int
	end func

	+func [d1005.knd, _sqlGetFloat] getFloat(col: int): float
	end func

	+func [d1005.knd, _sqlGetStr] getStr(col: int): []char
	end func

	+func [d1005.knd, _sqlCurrent] current(): bool
	end func

	+func [d1005.knd, _sqlNext] next(): bool
	end func

	+func [d1005.knd, _sqlApply] apply(): bool
	end func

	+func [d1005.knd, _sqlGetBlob] getBlob(col: int): []bit8
	end func

	+func [d1005.knd, _sqlErrMsg] errMsg(): []char
	end func

	var db: int
	var statement: int
	var result: int
end class

+func [d1005.knd, _makeSql, _make_instance] makeSql(me2: @Sql, path: []char): @Sql
end func

var curTarget: []char

func main()
	var target: [][]char :: ["cpp", "web", "exe"]
	for i(0, ^target - 1)
		do @curTarget :: target[i]
		do file@makeDir("./../compiler/res/sys/\{@curTarget}/")
		do file@forEach("./sys/", false, @convert, null)
	end for
end func

func convert(path: []char, dir: bool, data: kuin@Class): bool
	if(dir | file@ext(path) <> "kn")
		ret true
	end if
	var reader: file@Reader :: file@makeReader(path)
	var writer: file@Writer :: file@makeWriter("./../compiler/res/sys/\{@curTarget}/\{file@fileName(path)}", false)
	var skip_: bool :: false
	while loop(!reader.term())
		var s: []char :: reader.readLine()
		if(^s >= 1 & s[0] = '#')
			var targets: [][]char :: s.split(",")
			do skip_ :: true
			for i(0, ^targets - 1)
				var t: []char :: targets[i].trim()
				if(t = "any" | t = @curTarget)
					do skip_ :: false
				end if
			end for
			skip loop
		end if
		if(!skip_)
			do writer.writeStr(s ~ "\n")
		end if
	end while
	do writer.fin()
	do reader.fin()
	ret true
end func

#exe
func[d0001.knd, _sndInit]_init()
end func

func[d0001.knd, _sndFin]_fin()
end func

+class Snd()
	*func[d0001.knd, _sndDtor, _force]_dtor()
	end func
	
	+func[d0001.knd, _sndFreq]freq(value: float)
	end func
	
	+func[d0001.knd, _sndGetPos]getPos(): float
	end func
	
	+func[d0001.knd, _sndLen]len(): float
	end func
	
	+func[d0001.knd, _sndPan]pan(value: float)
	end func
	
	+func[d0001.knd, _sndPlay]play()
	end func
	
	+func[d0001.knd, _sndPlaying]playing(): bool
	end func
	
	+func[d0001.knd, _sndPlayLoop]playLoop(loopPos: float)
	end func
	
	+func[d0001.knd, _sndSetPos]setPos(value: float)
	end func
	
	+func[d0001.knd, _sndStop]stop()
	end func
	
	+func[d0001.knd, _sndVolume]volume(value: float)
	end func
	
	var sndBuf: int
	var event1: int
	var event2: int
	var sizePerSec: int
	var loopPos: int
	var endPos: float
	var freq2: bit32
	var streaming: bit32
	var thread: int
	var atomic: int
	var volume2: float
	var handle: int
	var funcClose: int
	var funcRead: int
	var funcSetPos: int
	var funcGetPos: int
end class

+func[d0001.knd, _getMainVolume]getMainVolume(): float
end func

+func[d0001.knd, _makeSnd, _make_instance]makeSnd(me2: @Snd, path: []char, streaming: bool): @Snd
end func

+func[d0001.knd, _setMainVolume]setMainVolume(value: float)
end func

;;; in Kuin, file is always UTF-8 but cui depends on machine's locale, so fgetwc(stdin) must be used.

const strBufSize: int :: 1024
var delimiters: []char :: " ,\n"

func[d0002.knd, _init]_init()
end func

func[d0002.knd]_fin()
end func

+func delimiter(delimiters_: []char)
	do @delimiters :: delimiters_
end func

+func[__raw, cui_print]print(str: []char)
end func

+func[__raw, cui_inputLetter]inputLetter(): char
end func

func _inputChar(): char
	while loop(true)
		var c: char :: @inputLetter()
		for i(0, ^@delimiters - 1)
			if(c = @delimiters[i] | (c = '\u000D' & @delimiters[i] = '\n'))
				do c :: '\0'
				break i
			end if
		end for
		if(c = '\u000D')
			skip loop
		end if
		if(c = '\uFFFF')
			throw excpt@invalidDataFmt
		end if
		ret c
	end while
end func

+func inputChar(): char
	while loop(true)
		var c: char :: @_inputChar()
		if(c <> '\0')
			ret c
		end if
	end while
end func

+func inputInt(): int
	var s: []char :: @inputStr()
	var b: bool
	var r: int :: s.toInt(&b)
	if(!b)
		throw excpt@invalidDataFmt
	end if
	ret r
end func

+func inputFloat(): float
	var s: []char :: @inputStr()
	var b: bool
	var r: float :: s.toFloat(&b)
	if(!b)
		throw excpt@invalidDataFmt
	end if
	ret r
end func

+func inputStr(): []char
	var buf: []char :: #[@strBufSize]char
	var ptr: int :: 0
	var c: char :: '\0'
	while loop(true)
		do c :: @_inputChar()
		if(c = '\uFFFF')
			if(^buf = 0)
				throw excpt@invalidDataFmt
			end if
			break loop
		end if
		if(c = '\0')
			if(^buf = 0)
				skip loop
			end if
			break loop
		end if
		if(ptr = ^buf)
			do buf :~ #[@strBufSize]char
		end if
		do buf[ptr] :: c
		do ptr :+ 1
	end while
	ret buf.sub(0, ptr)
end func

+func input(): []char
	var buf: []char :: #[@strBufSize]char
	var ptr: int :: 0
	var c: char :: '\0'
	while loop(true)
		do c :: @inputLetter()
		if(c = '\uFFFF')
			break loop
		end if
		if(c = '\u000D')
			skip loop
		end if
		if(c = '\n')
			break loop
		end if
		if(ptr = ^buf)
			do buf :~ #[@strBufSize]char
		end if
		do buf[ptr] :: c
		do ptr :+ 1
	end while
	ret buf.sub(0, ptr)
end func

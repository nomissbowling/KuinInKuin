+func write(codes: list<[]char>, attr: []char, args: list<\ast@AstArg>, members: list<\ast@AstClassItem>)
	switch(attr)
	case "toStrFmtFloat"
		; TODO:
	case "toStrFmtInt"
		; TODO:
	case "math_bellmanFord"
		; TODO:
	case "math_dijkstra"
		; TODO:
	case "math_gamma"
		; TODO:
	default
		assert false
	end switch
	
	func search(members: list<\ast@AstClassItem>, name: []char): \web\output@WebInfo
		do members.head()
		while(!members.term())
			var def: \ast@Ast :: members.get().def
			if(def.typeId = %var_ & (def $ \ast@AstVar).arg.name <>& null & (def $ \ast@AstVar).arg.name = name)
				ret \web\output@getInfo((def $ \ast@AstVar).arg)
			end if
			do members.next()
		end while
		assert false
		ret null
	end func
end func
